// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package databricks

import (
	"github.com/databricks/databricks-sdk-go/client"
	{{range .Packages}}
	"github.com/databricks/databricks-sdk-go/service/{{.Name}}"{{end}}
)

type WorkspaceClient struct {
	Config *Config

	{{range .Services}}{{if not .IsAccounts}}
	{{- if eq .Name "CommandExecution" -}}
	// This API allows executing commands on running clusters.
	CommandExecutor commands.CommandExecutor

	{{else}}{{.Comment "    // " 80}}
	{{.Name}} *{{.Package.Name}}.{{.Name}}API

	{{end}}{{end}}{{end}}
}

// Must panics if error is not nil. It's intended to be used with 
// [databricks.NewWorkspaceClient] for variable initializations
func Must[T any](c T, err error) T {
	if err != nil {
		panic(err)
	}
	return c
}

// NewClient creates new Databricks SDK client for Workspaces or returns error
// in case configuration is wrong
func NewWorkspaceClient(c ...*Config) (*WorkspaceClient, error) {
	var cfg *Config
	if len(c) == 1 {
		// first config
		cfg = c[0]
	} else {
		// default config
		cfg = &Config{}
	}
	apiClient, err := client.New(cfg)
	if err != nil {
		return nil, err
	}
	return &WorkspaceClient{
		Config: cfg,
		{{range .Services}}{{if not .IsAccounts}}
		{{- if eq .Name "CommandExecution" -}}
		CommandExecutor: commands.NewCommandExecutor(apiClient),
		{{else -}}
		{{.Name}}: {{.Package.Name}}.New{{.Name}}(apiClient),
		{{end -}}{{end}}{{end}}
	}, nil
}
