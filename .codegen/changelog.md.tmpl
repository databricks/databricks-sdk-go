# Version changelog

## {{.Version}}
{{- range .GroupChanges}}

### {{.Type.Message}}
{{range .Changes}}
 * {{.}}.
{{- end}}
{{end}}
{{if .ApiChanges}}
### API Changes:
{{range .ApiChanges.GroupDiff}}
 * {{.Action}} {{template "group-what" .}}{{if .Extra}} {{.Extra}}{{with .Other}} {{template "other-what" .}}{{end}}{{end}}.
{{- end}}

OpenAPI SHA: {{.Sha}}, Date: {{.Changed}}
{{- end}}{{if .DependencyUpdates}}
Dependency updates:
{{range .DependencyUpdates}}
 * {{.}}.
{{- end -}}
{{end}}

## {{.PrevVersion}}


{{- define "group-what" -}} 
{{if gt (len .Changes) 1 -}} {{template "single-what" .Changes.First}}{{end -}}
{{range .Changes.Middle -}}, {{template "single-what" .}}{{end -}}
{{if gt (len .Changes) 1}} and {{end}}{{template "single-what" .Changes.Last}}{{template "suffix-what" .}}
{{- end -}}


{{- define "single-what" -}}
    {{if eq .X "package" -}}
        [{{.Package.Name}}](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/{{.Package.Name}}) package
    {{- else if eq .X "service" -}}
        {{template "service" .Service}}
    {{- else if eq .X "method" -}}
        `{{.Method.PascalName}}`
    {{- else if eq .X "entity" -}}
        {{template "entity" .Entity}}
    {{- else if eq .X "field" -}}
        `{{.Field.PascalName}}`
    {{- end}}
{{- end -}}

{{- define "suffix-what" -}}
    {{if eq .Type "method"}} method{{template "plural-suffix" .Changes}} for {{template "service" .Parent.Service}}
    {{- else if eq .Type "field"}} field{{template "plural-suffix" .Changes}} for {{template "entity" .Parent.Entity}}
    {{- end}}
{{- end -}}

{{- define "plural-suffix" -}}
{{if gt (len .) 1}}s{{end}}
{{- end -}}

{{- define "other-what" -}}
    {{if eq .X "package" -}}
        [{{.Package.Name}}](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/{{.Package.Name}}) package
    {{- else if eq .X "service" -}}
        {{template "service" .Service}}
    {{- else if eq .X "method" -}}
        `{{.Method.PascalName}}` method for {{template "service" .Method.Service}}
    {{- else if eq .X "entity" -}}
        {{template "entity" .Entity}}
    {{- else if eq .X "field" -}}
        `{{.Field.PascalName}}` field for {{template "entity" .Field.Of}}
    {{- end}}
{{- end -}}

{{- define "service" -}}
    [{{if .IsAccounts}}a{{else}}w{{end}}.{{.PascalName}}](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/{{.Package.Name}}#{{.PascalName}}API) {{if .IsAccounts}}account{{else}}workspace{{end}}-level service
{{- end -}}

{{- define "entity" -}}
    {{- if not . }}any /* ERROR */
	{{- else if .IsEmpty}}`any`
	{{- else if .PascalName}}[{{.Package.Name}}.{{.PascalName}}](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/{{.Package.Name}}#{{.PascalName}})
	{{- else if .IsAny}}`any`
	{{- else if .IsString}}`string`
	{{- else if .IsBool}}`bool`
	{{- else if .IsInt64}}`int64`
	{{- else if .IsFloat64}}`float64`
	{{- else if .IsInt}}`int`
	{{- else if .ArrayValue }}[]{{template "entity" .ArrayValue}}
	{{- else if .MapValue }}map[string]{{template "entity" .MapValue}}
	{{- else}}[{{.Package.Name}}.{{.PascalName}}](https://pkg.go.dev/github.com/databricks/databricks-sdk-go/service/{{.Package.Name}}#{{.PascalName}})
	{{- end -}}
{{- end -}}
