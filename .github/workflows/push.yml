name: build

on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]
  push:
    # Always run on push to main. The build cache can only be reused
    # if it was saved by a run from the repository's default branch.
    # The run result will be identical to that from the merge queue
    # because the commit is identical, yet we need to perform it to
    # seed the build cache.
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goVersion: ["1.19", "1.20", "1.21"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.goVersion }}

      - name: Set go env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Pull external libraries
        run: make vendor

      - name: Run tests
        run: make test

      - name: Publish test coverage
        uses: codecov/codecov-action@v1

  fmt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18.x

          # No need to download cached dependencies when running gofmt.
          cache: false

      - name: Run gofmt
        run: |
          # -l: list files that were reformatted
          # -w: write back formatted files to disk
          gofmt -l -w ./

      - name: Fail on differences
        run: |
          # Exit with status code 1 if there are differences (i.e. unformatted files)
          git diff --exit-code
