name: Mark Check Status

on:
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: "Pull request number"
        required: true

      state:
        description: "Integration test run state" 
        required: true

      commit_sha:
        description: "Commit SHA to approve"
        required: true



env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  mark-check:
    runs-on: ubuntu-latest
    steps:
      - name: Mark Result
        run: |
          gh api -X POST -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/databricks/databricks-sdk-go/statuses/${{ inputs.commit_sha }} \
            -f 'state=${{inputs.state}}' \
            -f 'context=Integration Tests Check'

  pr-comment:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3


          - name: Delete old comments
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            run: |
                # Delete previous comment if it exists
                previous_comment_ids=$(gh api "repos/${{ github.repository }}/issues/${{ inputs.pull_request_number }}/comments" \
                  --jq '.[] | select(.body | startswith("<!-- INTEGRATION_TESTS -->")) | .id')
                echo "Previous comment IDs: $previous_comment_ids"
                # Iterate over each comment ID and delete the comment
                if [ ! -z "$previous_comment_ids" ]; then
                  echo "$previous_comment_ids" | while read -r comment_id; do
                    echo "Deleting comment with ID: $comment_id"
                    gh api "repos/${{ github.repository }}/issues/comments/$comment_id" -X DELETE
                  done
                fi
              
          - name: Write new comment
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            run: |
        
                # Add new comment
                gh pr comment ${{ inputs.pull_request_number }} --body \
                "<!-- INTEGRATION_TESTS -->
                Test status:  ${{ github.event.inputs.state}}
                "
