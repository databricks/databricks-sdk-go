name: Integration Tests

on:

  pull_request:
    types: [opened, synchronize]

  merge_group:
  

jobs:
  write-message:
    if: github.event_name == 'pull_request'
    name: Write Message
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Delete old comments
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          # Delete previous comment if it exists
          previous_comment_ids=$(gh api "repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            --jq '.[] | select(.body | startswith("<!-- INTEGRATION_TESTS -->")) | .id')
          echo "Previous comment IDs: $previous_comment_ids"
          # Iterate over each comment ID and delete the comment
          if [ ! -z "$previous_comment_ids" ]; then
            echo "$previous_comment_ids" | while read -r comment_id; do
              echo "Deleting comment with ID: $comment_id"
              gh api "repos/${{ github.repository }}/issues/comments/$comment_id" -X DELETE
            done
          fi
        
    - name: Write new comment
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          gh pr comment ${{ github.event.pull_request.number }} --body \
          "<!-- INTEGRATION_TESTS -->
          Run integration tests using the corresponding workflow:
                    
          Inputs:
          PR Number:${{github.event.pull_request.number}}
          Commit SHA:${{ github.event.pull_request.head.sha }}
          
          This check will be approved automatically on success.
          "

  # The hash for the merge queue may not be the same as the hash for the PR.
  # Auto approve the check for the merge queue to avoid running integration tests twice.
  auto-approve:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
      - name: Mark Check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
            gh api -X POST -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/statuses/${{ github.sha }} \
              -f 'state=success' \
              -f 'context=Integration Tests Check'