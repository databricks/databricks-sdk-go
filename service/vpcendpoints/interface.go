// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package vpcendpoints

import (
	"context"
)

// These APIs manage VPC endpoint configurations for this account. This object
// registers an AWS VPC endpoint in your Databricks account so your workspace
// can use it with AWS PrivateLink. Your VPC endpoint connects to one of two VPC
// endpoint services -- one for workspace (both for front-end connection and for
// back-end connection to REST APIs) and one for the back-end secure cluster
// connectivity relay from the data plane. Your account must be enabled for
// PrivateLink to use these APIs. Before configuring PrivateLink, it is
// important to read the [Databricks article about
// PrivateLink](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html).
//
// This is the high-level interface, that contains generated methods.
//
// Evolving: this interface is under development. Method signatures may change.
type VpcEndpointsService interface {

	// Create VPC endpoint configuration
	//
	// Creates a VPC endpoint configuration, which represents a [VPC
	// endpoint](https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints.html)
	// object in AWS used to communicate privately with Databricks over [AWS
	// PrivateLink](https://aws.amazon.com/privatelink).
	//
	// **Important**: When you register a VPC endpoint to the Databricks
	// workspace VPC endpoint service for any workspace, **in this release
	// <Databricks> enables front-end (web application and REST API) access from
	// the source network of the VPC endpoint to all workspaces in that AWS
	// region in your <Databricks> account if the workspaces have any
	// PrivateLink connections in their workspace configuration**. If you have
	// questions about this behavior, contact your Databricks representative.
	//
	// Within AWS, your VPC endpoint stays in `pendingAcceptance` state until
	// you register it in a VPC endpoint configuration through the Account API.
	// After you register the VPC endpoint configuration, the Databricks
	// [endpoint
	// service](https://docs.aws.amazon.com/vpc/latest/privatelink/privatelink-share-your-services.html)
	// automatically accepts the VPC endpoint and it eventually transitions to
	// the `available` state.
	//
	// Before configuring PrivateLink, read the [Databricks article about
	// PrivateLink](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html).
	//
	// This operation is available only if your account is on the E2 version of
	// the platform and your Databricks account is enabled for PrivateLink
	// (Public Preview). Contact your Databricks representative to enable your
	// account for PrivateLink.
	CreateVpcEndpoint(ctx context.Context, request CreateVpcEndpointRequest) (*VpcEndpoint, error)

	// Delete VPC endpoint configuration
	//
	// Deletes a VPC endpoint configuration, which represents an [AWS VPC
	// endpoint](https://docs.aws.amazon.com/vpc/latest/privatelink/concepts.html)
	// that can communicate privately with Databricks over [AWS
	// PrivateLink](https://aws.amazon.com/privatelink).
	//
	// Upon deleting a VPC endpoint configuration, the VPC endpoint in AWS
	// changes its state from `accepted` to `rejected`, which means that it is
	// no longer usable from your VPC.
	//
	// Before configuring PrivateLink, read the [Databricks article about
	// PrivateLink](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html).
	//
	// This operation is available only if your account is on the E2 version of
	// the platform and your Databricks account is enabled for PrivateLink
	// (Public Preview). Contact your Databricks representative to enable your
	// account for PrivateLink.
	DeleteVpcEndpoint(ctx context.Context, request DeleteVpcEndpointRequest) error

	// DeleteVpcEndpointByAccountIdAndVpcEndpointId calls DeleteVpcEndpoint, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	DeleteVpcEndpointByAccountIdAndVpcEndpointId(ctx context.Context, accountId string, vpcEndpointId string) error

	// Get all VPC endpoint configurations
	//
	// Gets a list of all VPC endpoints for an account, specified by ID.
	//
	// Before configuring PrivateLink, read the [Databricks article about
	// PrivateLink](https://docs.databricks.com/administration-guide/cloud-configurations/aws/privatelink.html).
	//
	// This operation is available only if your account is on the E2 version of
	// the platform and your Databricks account is enabled for PrivateLink
	// (Public Preview). Contact your Databricks representative to enable your
	// account for PrivateLink.
	GetAllVpcEndpoints(ctx context.Context, request GetAllVpcEndpointsRequest) ([]VpcEndpoint, error)

	// GetAllVpcEndpointsByAccountId calls GetAllVpcEndpoints, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetAllVpcEndpointsByAccountId(ctx context.Context, accountId string) ([]VpcEndpoint, error)

	// Get a VPC endpoint configuration
	//
	// Gets a VPC endpoint configuration, which represents a [VPC
	// endpoint](https://docs.aws.amazon.com/vpc/latest/privatelink/concepts.html)
	// object in AWS used to communicate privately with Databricks over [AWS
	// PrivateLink](https://aws.amazon.com/privatelink).
	//
	// This operation is available only if your account is on the E2 version of
	// the platform and your Databricks account is enabled for PrivateLink
	// (Public Preview). Contact your Databricks representative to enable your
	// account for PrivateLink.
	GetVpcEndpoint(ctx context.Context, request GetVpcEndpointRequest) (*VpcEndpoint, error)

	// GetVpcEndpointByAccountIdAndVpcEndpointId calls GetVpcEndpoint, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetVpcEndpointByAccountIdAndVpcEndpointId(ctx context.Context, accountId string, vpcEndpointId string) (*VpcEndpoint, error)
}
