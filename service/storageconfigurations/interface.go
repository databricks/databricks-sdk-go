// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package storageconfigurations

import (
	"context"
)

// These APIs manage storage configurations for this workspace. A root storage
// S3 bucket in your account is required to store objects like cluster logs,
// notebook revisions, and job results. You can also use the root storage S3
// bucket for storage of non-production DBFS data. A storage configuration
// encapsulates this bucket information, and its ID is used when creating a new
// workspace.
//
// This is the high-level interface, that contains generated methods.
//
// Evolving: this interface is under development. Method signatures may change.
type StorageConfigurationsService interface {

	// Create new storage configuration
	//
	// Creates new storage configuration for an account, specified by ID.
	// Uploads a storage configuration object that represents the root AWS S3
	// bucket in your account. Databricks stores related workspace assets
	// including DBFS, cluster logs, and job results. For the AWS S3 bucket, you
	// need to configure the required bucket policy.
	//
	// For information about how to create a new workspace with this API, see
	// [Create a new workspace using the Account
	// API](http://docs.databricks.com/administration-guide/account-api/new-workspace.html)
	CreateStorageConfig(ctx context.Context, request CreateStorageConfigurationRequest) (*StorageConfiguration, error)

	// Delete storage configuration
	//
	// Deletes a Databricks storage configuration. You cannot delete a storage
	// configuration that is associated with any workspace.
	DeleteStorageConfig(ctx context.Context, request DeleteStorageConfigRequest) error

	// DeleteStorageConfigByAccountIdAndStorageConfigurationId calls DeleteStorageConfig, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	DeleteStorageConfigByAccountIdAndStorageConfigurationId(ctx context.Context, accountId string, storageConfigurationId string) error

	// Get all storage configurations
	//
	// Gets a list of all Databricks storage configurations for your account,
	// specified by ID.
	GetAllStorageConfigs(ctx context.Context, request GetAllStorageConfigsRequest) ([]StorageConfiguration, error)

	// GetAllStorageConfigsByAccountId calls GetAllStorageConfigs, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetAllStorageConfigsByAccountId(ctx context.Context, accountId string) ([]StorageConfiguration, error)

	// StorageConfigurationStorageConfigurationNameToStorageConfigurationIdMap retrieves a mapping to access ID by name
	//
	// This method is generated by Databricks SDK Code Generator.
	StorageConfigurationStorageConfigurationNameToStorageConfigurationIdMap(ctx context.Context, request GetAllStorageConfigsRequest) (map[string]string, error)

	// GetStorageConfigurationByStorageConfigurationName retrieves StorageConfiguration by name.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetStorageConfigurationByStorageConfigurationName(ctx context.Context, name string) (*StorageConfiguration, error)

	// Get storage configuration
	//
	// Gets a Databricks storage configuration for an account, both specified by
	// ID.
	GetStorageConfig(ctx context.Context, request GetStorageConfigRequest) (*StorageConfiguration, error)

	// GetStorageConfigByAccountIdAndStorageConfigurationId calls GetStorageConfig, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetStorageConfigByAccountIdAndStorageConfigurationId(ctx context.Context, accountId string, storageConfigurationId string) (*StorageConfiguration, error)
}
