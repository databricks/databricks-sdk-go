// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package permissions

import (
	"context"
)

// Permissions API are used to create read, write, edit, update and manage
// access for various users on different objects and endpoints.
//
// This is the high-level interface, that contains generated methods.
//
// Evolving: this interface is under development. Method signatures may change.
type PermissionsService interface {

	// Get object permissions
	//
	// Get the permission of an object. Objects can inherit permissions from
	// their parent objects or root objects.
	GetObjectPermissions(ctx context.Context, request GetObjectPermissionsRequest) (*ObjectPermissions, error)

	// GetObjectPermissionsByObjectTypeAndObjectId calls GetObjectPermissions, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetObjectPermissionsByObjectTypeAndObjectId(ctx context.Context, objectType string, objectId string) (*ObjectPermissions, error)

	// Get permission levels
	//
	// Get permission levels that a user can have.
	GetPermissionLevels(ctx context.Context, request GetPermissionLevelsRequest) (*GetPermissionLevelsResponse, error)

	// GetPermissionLevelsByRequestObjectTypeAndRequestObjectId calls GetPermissionLevels, but directly with primitive function arguments,
	// instead of constructing request instance.
	//
	// This method is generated by Databricks SDK Code Generator.
	GetPermissionLevelsByRequestObjectTypeAndRequestObjectId(ctx context.Context, requestObjectType string, requestObjectId string) (*GetPermissionLevelsResponse, error)

	// Set permissions
	//
	// Set permissions on object. Objects can inherit permissiond from their
	// parent objects and root objects.
	SetObjectPermissions(ctx context.Context, request SetObjectPermissions) error

	// Update permission
	//
	// Update permission on objects
	UpdateObjectPermissions(ctx context.Context, request UpdateObjectPermissions) error
}
