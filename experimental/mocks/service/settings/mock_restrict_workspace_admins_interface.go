// Code generated by mockery v2.39.1. DO NOT EDIT.

package settings

import (
	context "context"

	settings "github.com/databricks/databricks-sdk-go/service/settings"
	mock "github.com/stretchr/testify/mock"
)

// MockRestrictWorkspaceAdminsInterface is an autogenerated mock type for the RestrictWorkspaceAdminsInterface type
type MockRestrictWorkspaceAdminsInterface struct {
	mock.Mock
}

type MockRestrictWorkspaceAdminsInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRestrictWorkspaceAdminsInterface) EXPECT() *MockRestrictWorkspaceAdminsInterface_Expecter {
	return &MockRestrictWorkspaceAdminsInterface_Expecter{mock: &_m.Mock}
}

// DeleteRestrictWorkspaceAdminsSetting provides a mock function with given fields: ctx, request
func (_m *MockRestrictWorkspaceAdminsInterface) DeleteRestrictWorkspaceAdminsSetting(ctx context.Context, request settings.DeleteRestrictWorkspaceAdminsSettingRequest) (*settings.DeleteRestrictWorkspaceAdminsSettingResponse, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for DeleteRestrictWorkspaceAdminsSetting")
	}

	var r0 *settings.DeleteRestrictWorkspaceAdminsSettingResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, settings.DeleteRestrictWorkspaceAdminsSettingRequest) (*settings.DeleteRestrictWorkspaceAdminsSettingResponse, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, settings.DeleteRestrictWorkspaceAdminsSettingRequest) *settings.DeleteRestrictWorkspaceAdminsSettingResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*settings.DeleteRestrictWorkspaceAdminsSettingResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, settings.DeleteRestrictWorkspaceAdminsSettingRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteRestrictWorkspaceAdminsSetting'
type MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call struct {
	*mock.Call
}

// DeleteRestrictWorkspaceAdminsSetting is a helper method to define mock.On call
//   - ctx context.Context
//   - request settings.DeleteRestrictWorkspaceAdminsSettingRequest
func (_e *MockRestrictWorkspaceAdminsInterface_Expecter) DeleteRestrictWorkspaceAdminsSetting(ctx interface{}, request interface{}) *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call {
	return &MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call{Call: _e.mock.On("DeleteRestrictWorkspaceAdminsSetting", ctx, request)}
}

func (_c *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call) Run(run func(ctx context.Context, request settings.DeleteRestrictWorkspaceAdminsSettingRequest)) *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(settings.DeleteRestrictWorkspaceAdminsSettingRequest))
	})
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call) Return(_a0 *settings.DeleteRestrictWorkspaceAdminsSettingResponse, _a1 error) *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call) RunAndReturn(run func(context.Context, settings.DeleteRestrictWorkspaceAdminsSettingRequest) (*settings.DeleteRestrictWorkspaceAdminsSettingResponse, error)) *MockRestrictWorkspaceAdminsInterface_DeleteRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Return(run)
	return _c
}

// GetRestrictWorkspaceAdminsSetting provides a mock function with given fields: ctx, request
func (_m *MockRestrictWorkspaceAdminsInterface) GetRestrictWorkspaceAdminsSetting(ctx context.Context, request settings.GetRestrictWorkspaceAdminsSettingRequest) (*settings.RestrictWorkspaceAdminsSetting, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for GetRestrictWorkspaceAdminsSetting")
	}

	var r0 *settings.RestrictWorkspaceAdminsSetting
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, settings.GetRestrictWorkspaceAdminsSettingRequest) (*settings.RestrictWorkspaceAdminsSetting, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, settings.GetRestrictWorkspaceAdminsSettingRequest) *settings.RestrictWorkspaceAdminsSetting); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*settings.RestrictWorkspaceAdminsSetting)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, settings.GetRestrictWorkspaceAdminsSettingRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRestrictWorkspaceAdminsSetting'
type MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call struct {
	*mock.Call
}

// GetRestrictWorkspaceAdminsSetting is a helper method to define mock.On call
//   - ctx context.Context
//   - request settings.GetRestrictWorkspaceAdminsSettingRequest
func (_e *MockRestrictWorkspaceAdminsInterface_Expecter) GetRestrictWorkspaceAdminsSetting(ctx interface{}, request interface{}) *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call {
	return &MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call{Call: _e.mock.On("GetRestrictWorkspaceAdminsSetting", ctx, request)}
}

func (_c *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call) Run(run func(ctx context.Context, request settings.GetRestrictWorkspaceAdminsSettingRequest)) *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(settings.GetRestrictWorkspaceAdminsSettingRequest))
	})
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call) Return(_a0 *settings.RestrictWorkspaceAdminsSetting, _a1 error) *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call) RunAndReturn(run func(context.Context, settings.GetRestrictWorkspaceAdminsSettingRequest) (*settings.RestrictWorkspaceAdminsSetting, error)) *MockRestrictWorkspaceAdminsInterface_GetRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Return(run)
	return _c
}

// Impl provides a mock function with given fields:
func (_m *MockRestrictWorkspaceAdminsInterface) Impl() settings.RestrictWorkspaceAdminsService {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Impl")
	}

	var r0 settings.RestrictWorkspaceAdminsService
	if rf, ok := ret.Get(0).(func() settings.RestrictWorkspaceAdminsService); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(settings.RestrictWorkspaceAdminsService)
		}
	}

	return r0
}

// MockRestrictWorkspaceAdminsInterface_Impl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Impl'
type MockRestrictWorkspaceAdminsInterface_Impl_Call struct {
	*mock.Call
}

// Impl is a helper method to define mock.On call
func (_e *MockRestrictWorkspaceAdminsInterface_Expecter) Impl() *MockRestrictWorkspaceAdminsInterface_Impl_Call {
	return &MockRestrictWorkspaceAdminsInterface_Impl_Call{Call: _e.mock.On("Impl")}
}

func (_c *MockRestrictWorkspaceAdminsInterface_Impl_Call) Run(run func()) *MockRestrictWorkspaceAdminsInterface_Impl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_Impl_Call) Return(_a0 settings.RestrictWorkspaceAdminsService) *MockRestrictWorkspaceAdminsInterface_Impl_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_Impl_Call) RunAndReturn(run func() settings.RestrictWorkspaceAdminsService) *MockRestrictWorkspaceAdminsInterface_Impl_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateRestrictWorkspaceAdminsSetting provides a mock function with given fields: ctx, request
func (_m *MockRestrictWorkspaceAdminsInterface) UpdateRestrictWorkspaceAdminsSetting(ctx context.Context, request settings.UpdateRestrictWorkspaceAdminsSettingRequest) (*settings.RestrictWorkspaceAdminsSetting, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for UpdateRestrictWorkspaceAdminsSetting")
	}

	var r0 *settings.RestrictWorkspaceAdminsSetting
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, settings.UpdateRestrictWorkspaceAdminsSettingRequest) (*settings.RestrictWorkspaceAdminsSetting, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, settings.UpdateRestrictWorkspaceAdminsSettingRequest) *settings.RestrictWorkspaceAdminsSetting); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*settings.RestrictWorkspaceAdminsSetting)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, settings.UpdateRestrictWorkspaceAdminsSettingRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateRestrictWorkspaceAdminsSetting'
type MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call struct {
	*mock.Call
}

// UpdateRestrictWorkspaceAdminsSetting is a helper method to define mock.On call
//   - ctx context.Context
//   - request settings.UpdateRestrictWorkspaceAdminsSettingRequest
func (_e *MockRestrictWorkspaceAdminsInterface_Expecter) UpdateRestrictWorkspaceAdminsSetting(ctx interface{}, request interface{}) *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call {
	return &MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call{Call: _e.mock.On("UpdateRestrictWorkspaceAdminsSetting", ctx, request)}
}

func (_c *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call) Run(run func(ctx context.Context, request settings.UpdateRestrictWorkspaceAdminsSettingRequest)) *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(settings.UpdateRestrictWorkspaceAdminsSettingRequest))
	})
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call) Return(_a0 *settings.RestrictWorkspaceAdminsSetting, _a1 error) *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call) RunAndReturn(run func(context.Context, settings.UpdateRestrictWorkspaceAdminsSettingRequest) (*settings.RestrictWorkspaceAdminsSetting, error)) *MockRestrictWorkspaceAdminsInterface_UpdateRestrictWorkspaceAdminsSetting_Call {
	_c.Call.Return(run)
	return _c
}

// WithImpl provides a mock function with given fields: impl
func (_m *MockRestrictWorkspaceAdminsInterface) WithImpl(impl settings.RestrictWorkspaceAdminsService) settings.RestrictWorkspaceAdminsInterface {
	ret := _m.Called(impl)

	if len(ret) == 0 {
		panic("no return value specified for WithImpl")
	}

	var r0 settings.RestrictWorkspaceAdminsInterface
	if rf, ok := ret.Get(0).(func(settings.RestrictWorkspaceAdminsService) settings.RestrictWorkspaceAdminsInterface); ok {
		r0 = rf(impl)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(settings.RestrictWorkspaceAdminsInterface)
		}
	}

	return r0
}

// MockRestrictWorkspaceAdminsInterface_WithImpl_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WithImpl'
type MockRestrictWorkspaceAdminsInterface_WithImpl_Call struct {
	*mock.Call
}

// WithImpl is a helper method to define mock.On call
//   - impl settings.RestrictWorkspaceAdminsService
func (_e *MockRestrictWorkspaceAdminsInterface_Expecter) WithImpl(impl interface{}) *MockRestrictWorkspaceAdminsInterface_WithImpl_Call {
	return &MockRestrictWorkspaceAdminsInterface_WithImpl_Call{Call: _e.mock.On("WithImpl", impl)}
}

func (_c *MockRestrictWorkspaceAdminsInterface_WithImpl_Call) Run(run func(impl settings.RestrictWorkspaceAdminsService)) *MockRestrictWorkspaceAdminsInterface_WithImpl_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(settings.RestrictWorkspaceAdminsService))
	})
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_WithImpl_Call) Return(_a0 settings.RestrictWorkspaceAdminsInterface) *MockRestrictWorkspaceAdminsInterface_WithImpl_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRestrictWorkspaceAdminsInterface_WithImpl_Call) RunAndReturn(run func(settings.RestrictWorkspaceAdminsService) settings.RestrictWorkspaceAdminsInterface) *MockRestrictWorkspaceAdminsInterface_WithImpl_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRestrictWorkspaceAdminsInterface creates a new instance of MockRestrictWorkspaceAdminsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRestrictWorkspaceAdminsInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRestrictWorkspaceAdminsInterface {
	mock := &MockRestrictWorkspaceAdminsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
