// Code generated by mockery v2.53.2. DO NOT EDIT.

package catalog

import (
	context "context"

	catalog "github.com/databricks/databricks-sdk-go/service/catalog"

	listing "github.com/databricks/databricks-sdk-go/listing"

	mock "github.com/stretchr/testify/mock"
)

// MockExternalLineageInterface is an autogenerated mock type for the ExternalLineageInterface type
type MockExternalLineageInterface struct {
	mock.Mock
}

type MockExternalLineageInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockExternalLineageInterface) EXPECT() *MockExternalLineageInterface_Expecter {
	return &MockExternalLineageInterface_Expecter{mock: &_m.Mock}
}

// CreateExternalLineageRelationship provides a mock function with given fields: ctx, request
func (_m *MockExternalLineageInterface) CreateExternalLineageRelationship(ctx context.Context, request catalog.CreateExternalLineageRelationshipRequest) (*catalog.ExternalLineageRelationship, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for CreateExternalLineageRelationship")
	}

	var r0 *catalog.ExternalLineageRelationship
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.CreateExternalLineageRelationshipRequest) (*catalog.ExternalLineageRelationship, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, catalog.CreateExternalLineageRelationshipRequest) *catalog.ExternalLineageRelationship); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*catalog.ExternalLineageRelationship)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, catalog.CreateExternalLineageRelationshipRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExternalLineageInterface_CreateExternalLineageRelationship_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateExternalLineageRelationship'
type MockExternalLineageInterface_CreateExternalLineageRelationship_Call struct {
	*mock.Call
}

// CreateExternalLineageRelationship is a helper method to define mock.On call
//   - ctx context.Context
//   - request catalog.CreateExternalLineageRelationshipRequest
func (_e *MockExternalLineageInterface_Expecter) CreateExternalLineageRelationship(ctx interface{}, request interface{}) *MockExternalLineageInterface_CreateExternalLineageRelationship_Call {
	return &MockExternalLineageInterface_CreateExternalLineageRelationship_Call{Call: _e.mock.On("CreateExternalLineageRelationship", ctx, request)}
}

func (_c *MockExternalLineageInterface_CreateExternalLineageRelationship_Call) Run(run func(ctx context.Context, request catalog.CreateExternalLineageRelationshipRequest)) *MockExternalLineageInterface_CreateExternalLineageRelationship_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.CreateExternalLineageRelationshipRequest))
	})
	return _c
}

func (_c *MockExternalLineageInterface_CreateExternalLineageRelationship_Call) Return(_a0 *catalog.ExternalLineageRelationship, _a1 error) *MockExternalLineageInterface_CreateExternalLineageRelationship_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExternalLineageInterface_CreateExternalLineageRelationship_Call) RunAndReturn(run func(context.Context, catalog.CreateExternalLineageRelationshipRequest) (*catalog.ExternalLineageRelationship, error)) *MockExternalLineageInterface_CreateExternalLineageRelationship_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteExternalLineageRelationship provides a mock function with given fields: ctx, request
func (_m *MockExternalLineageInterface) DeleteExternalLineageRelationship(ctx context.Context, request catalog.DeleteExternalLineageRelationshipRequest) error {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for DeleteExternalLineageRelationship")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.DeleteExternalLineageRelationshipRequest) error); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockExternalLineageInterface_DeleteExternalLineageRelationship_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteExternalLineageRelationship'
type MockExternalLineageInterface_DeleteExternalLineageRelationship_Call struct {
	*mock.Call
}

// DeleteExternalLineageRelationship is a helper method to define mock.On call
//   - ctx context.Context
//   - request catalog.DeleteExternalLineageRelationshipRequest
func (_e *MockExternalLineageInterface_Expecter) DeleteExternalLineageRelationship(ctx interface{}, request interface{}) *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call {
	return &MockExternalLineageInterface_DeleteExternalLineageRelationship_Call{Call: _e.mock.On("DeleteExternalLineageRelationship", ctx, request)}
}

func (_c *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call) Run(run func(ctx context.Context, request catalog.DeleteExternalLineageRelationshipRequest)) *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.DeleteExternalLineageRelationshipRequest))
	})
	return _c
}

func (_c *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call) Return(_a0 error) *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call) RunAndReturn(run func(context.Context, catalog.DeleteExternalLineageRelationshipRequest) error) *MockExternalLineageInterface_DeleteExternalLineageRelationship_Call {
	_c.Call.Return(run)
	return _c
}

// ListExternalLineageRelationships provides a mock function with given fields: ctx, request
func (_m *MockExternalLineageInterface) ListExternalLineageRelationships(ctx context.Context, request catalog.ListExternalLineageRelationshipsRequest) listing.Iterator[catalog.ExternalLineageInfo] {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for ListExternalLineageRelationships")
	}

	var r0 listing.Iterator[catalog.ExternalLineageInfo]
	if rf, ok := ret.Get(0).(func(context.Context, catalog.ListExternalLineageRelationshipsRequest) listing.Iterator[catalog.ExternalLineageInfo]); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(listing.Iterator[catalog.ExternalLineageInfo])
		}
	}

	return r0
}

// MockExternalLineageInterface_ListExternalLineageRelationships_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListExternalLineageRelationships'
type MockExternalLineageInterface_ListExternalLineageRelationships_Call struct {
	*mock.Call
}

// ListExternalLineageRelationships is a helper method to define mock.On call
//   - ctx context.Context
//   - request catalog.ListExternalLineageRelationshipsRequest
func (_e *MockExternalLineageInterface_Expecter) ListExternalLineageRelationships(ctx interface{}, request interface{}) *MockExternalLineageInterface_ListExternalLineageRelationships_Call {
	return &MockExternalLineageInterface_ListExternalLineageRelationships_Call{Call: _e.mock.On("ListExternalLineageRelationships", ctx, request)}
}

func (_c *MockExternalLineageInterface_ListExternalLineageRelationships_Call) Run(run func(ctx context.Context, request catalog.ListExternalLineageRelationshipsRequest)) *MockExternalLineageInterface_ListExternalLineageRelationships_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.ListExternalLineageRelationshipsRequest))
	})
	return _c
}

func (_c *MockExternalLineageInterface_ListExternalLineageRelationships_Call) Return(_a0 listing.Iterator[catalog.ExternalLineageInfo]) *MockExternalLineageInterface_ListExternalLineageRelationships_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockExternalLineageInterface_ListExternalLineageRelationships_Call) RunAndReturn(run func(context.Context, catalog.ListExternalLineageRelationshipsRequest) listing.Iterator[catalog.ExternalLineageInfo]) *MockExternalLineageInterface_ListExternalLineageRelationships_Call {
	_c.Call.Return(run)
	return _c
}

// ListExternalLineageRelationshipsAll provides a mock function with given fields: ctx, request
func (_m *MockExternalLineageInterface) ListExternalLineageRelationshipsAll(ctx context.Context, request catalog.ListExternalLineageRelationshipsRequest) ([]catalog.ExternalLineageInfo, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for ListExternalLineageRelationshipsAll")
	}

	var r0 []catalog.ExternalLineageInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.ListExternalLineageRelationshipsRequest) ([]catalog.ExternalLineageInfo, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, catalog.ListExternalLineageRelationshipsRequest) []catalog.ExternalLineageInfo); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]catalog.ExternalLineageInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, catalog.ListExternalLineageRelationshipsRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListExternalLineageRelationshipsAll'
type MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call struct {
	*mock.Call
}

// ListExternalLineageRelationshipsAll is a helper method to define mock.On call
//   - ctx context.Context
//   - request catalog.ListExternalLineageRelationshipsRequest
func (_e *MockExternalLineageInterface_Expecter) ListExternalLineageRelationshipsAll(ctx interface{}, request interface{}) *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call {
	return &MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call{Call: _e.mock.On("ListExternalLineageRelationshipsAll", ctx, request)}
}

func (_c *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call) Run(run func(ctx context.Context, request catalog.ListExternalLineageRelationshipsRequest)) *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.ListExternalLineageRelationshipsRequest))
	})
	return _c
}

func (_c *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call) Return(_a0 []catalog.ExternalLineageInfo, _a1 error) *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call) RunAndReturn(run func(context.Context, catalog.ListExternalLineageRelationshipsRequest) ([]catalog.ExternalLineageInfo, error)) *MockExternalLineageInterface_ListExternalLineageRelationshipsAll_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateExternalLineageRelationship provides a mock function with given fields: ctx, request
func (_m *MockExternalLineageInterface) UpdateExternalLineageRelationship(ctx context.Context, request catalog.UpdateExternalLineageRelationshipRequest) (*catalog.ExternalLineageRelationship, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for UpdateExternalLineageRelationship")
	}

	var r0 *catalog.ExternalLineageRelationship
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.UpdateExternalLineageRelationshipRequest) (*catalog.ExternalLineageRelationship, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, catalog.UpdateExternalLineageRelationshipRequest) *catalog.ExternalLineageRelationship); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*catalog.ExternalLineageRelationship)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, catalog.UpdateExternalLineageRelationshipRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockExternalLineageInterface_UpdateExternalLineageRelationship_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateExternalLineageRelationship'
type MockExternalLineageInterface_UpdateExternalLineageRelationship_Call struct {
	*mock.Call
}

// UpdateExternalLineageRelationship is a helper method to define mock.On call
//   - ctx context.Context
//   - request catalog.UpdateExternalLineageRelationshipRequest
func (_e *MockExternalLineageInterface_Expecter) UpdateExternalLineageRelationship(ctx interface{}, request interface{}) *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call {
	return &MockExternalLineageInterface_UpdateExternalLineageRelationship_Call{Call: _e.mock.On("UpdateExternalLineageRelationship", ctx, request)}
}

func (_c *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call) Run(run func(ctx context.Context, request catalog.UpdateExternalLineageRelationshipRequest)) *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.UpdateExternalLineageRelationshipRequest))
	})
	return _c
}

func (_c *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call) Return(_a0 *catalog.ExternalLineageRelationship, _a1 error) *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call) RunAndReturn(run func(context.Context, catalog.UpdateExternalLineageRelationshipRequest) (*catalog.ExternalLineageRelationship, error)) *MockExternalLineageInterface_UpdateExternalLineageRelationship_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockExternalLineageInterface creates a new instance of MockExternalLineageInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockExternalLineageInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockExternalLineageInterface {
	mock := &MockExternalLineageInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
