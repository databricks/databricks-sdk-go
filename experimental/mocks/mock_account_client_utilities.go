// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	databricks "github.com/databricks/databricks-sdk-go"
	mock "github.com/stretchr/testify/mock"

	provisioning "github.com/databricks/databricks-sdk-go/service/provisioning"
)

// MockAccountClientUtilities is an autogenerated mock type for the AccountClientUtilities type
type MockAccountClientUtilities struct {
	mock.Mock
}

type MockAccountClientUtilities_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAccountClientUtilities) EXPECT() *MockAccountClientUtilities_Expecter {
	return &MockAccountClientUtilities_Expecter{mock: &_m.Mock}
}

// GetWorkspaceClient provides a mock function with given fields: w
func (_m *MockAccountClientUtilities) GetWorkspaceClient(w provisioning.Workspace) (*databricks.WorkspaceClient, error) {
	ret := _m.Called(w)

	if len(ret) == 0 {
		panic("no return value specified for GetWorkspaceClient")
	}

	var r0 *databricks.WorkspaceClient
	var r1 error
	if rf, ok := ret.Get(0).(func(provisioning.Workspace) (*databricks.WorkspaceClient, error)); ok {
		return rf(w)
	}
	if rf, ok := ret.Get(0).(func(provisioning.Workspace) *databricks.WorkspaceClient); ok {
		r0 = rf(w)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*databricks.WorkspaceClient)
		}
	}

	if rf, ok := ret.Get(1).(func(provisioning.Workspace) error); ok {
		r1 = rf(w)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAccountClientUtilities_GetWorkspaceClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetWorkspaceClient'
type MockAccountClientUtilities_GetWorkspaceClient_Call struct {
	*mock.Call
}

// GetWorkspaceClient is a helper method to define mock.On call
//   - w provisioning.Workspace
func (_e *MockAccountClientUtilities_Expecter) GetWorkspaceClient(w interface{}) *MockAccountClientUtilities_GetWorkspaceClient_Call {
	return &MockAccountClientUtilities_GetWorkspaceClient_Call{Call: _e.mock.On("GetWorkspaceClient", w)}
}

func (_c *MockAccountClientUtilities_GetWorkspaceClient_Call) Run(run func(w provisioning.Workspace)) *MockAccountClientUtilities_GetWorkspaceClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(provisioning.Workspace))
	})
	return _c
}

func (_c *MockAccountClientUtilities_GetWorkspaceClient_Call) Return(_a0 *databricks.WorkspaceClient, _a1 error) *MockAccountClientUtilities_GetWorkspaceClient_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAccountClientUtilities_GetWorkspaceClient_Call) RunAndReturn(run func(provisioning.Workspace) (*databricks.WorkspaceClient, error)) *MockAccountClientUtilities_GetWorkspaceClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAccountClientUtilities creates a new instance of MockAccountClientUtilities. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAccountClientUtilities(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAccountClientUtilities {
	mock := &MockAccountClientUtilities{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
